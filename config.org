#+TITLE:
** Emoji
Set a keymap to insert emojis
#+BEGIN_SRC elisp :tangle yes
(global-set-key (kbd "<f12>") 'emojify-insert-emoji)
#+END_SRC
** Highlights and text decorations
#+BEGIN_SRC elisp :tangle yes
(add-hook 'prog-mode-hook 'highlight-indent-guides-mode)
#+END_SRC
*** Beacon mode
#+BEGIN_SRC elisp :tangle yes
(beacon-mode 1)
(setq beacon-blink-when-focused 1)
(setq beacon-blink-when-window-scrolls 1)
(setq beacon-blink-when-point-moves-vertically 1)
(setq beacon-blink-when-point-moves-horizontally 1)
(setq beacon-push-mark 35)

#+END_SRC

** Theme

#+BEGIN_SRC elisp :tangle yes
(setq doom-theme 'doom-city-lights)
#+END_SRC
*** Fonts
#+BEGIN_SRC elisp :tangle yes
(setq doom-font (font-spec :family "Fira Code" :size 19))
#+END_SRC
*** Line number
#+BEGIN_SRC elisp :tangle yes
(setq display-line-numbers-type 'relative)
#+END_SRC
** Reading
Use emacs for reading stuff
#+BEGIN_SRC elisp :tangle yes

(use-package! xkcd
  :commands (xkcd-get-json xkcd-download xkcd-get
             ;; now for funcs from my extension of this pkg
             +xkcd-find-and-copy +xkcd-find-and-view
             +xkcd-fetch-info +xkcd-select)
  :config
  (add-to-list 'evil-snipe-disabled-modes 'xkcd-mode)
  :general (:states 'normal
            :keymaps 'xkcd-mode-map
            "<right>" #'xkcd-next
            "n"       #'xkcd-next ; evil-ish
            "<left>"  #'xkcd-prev
            "N"       #'xkcd-prev ; evil-ish
            "r"       #'xkcd-rand
            "a"       #'xkcd-rand ; because image-rotate can interfere
            "t"       #'xkcd-alt-text
            "q"       #'xkcd-kill-buffer
            "o"       #'xkcd-open-browser
            "e"       #'xkcd-open-explanation-browser
            ;; extras
            "s"       #'+xkcd-find-and-view
            "/"       #'+xkcd-find-and-view
            "y"       #'+xkcd-copy))

#+END_SRC
#+BEGIN_SRC elisp :tangle yes

(setq evil-vsplit-window-right t
      evil-split-window-below t)
(defadvice! prompt-for-buffer (&rest _)
  :after '(evil-window-split evil-window-vsplit)
  (+ivy/switch-buffer))
(setq +ivy-buffer-preview t)
(map! :map evil-window-map
      "SPC" #'rotate-layout)

#+END_SRC

** Company
It's nice to have completions almost all the time, in my opinion. Key strokes
are just waiting to be saved!
#+BEGIN_SRC emacs-lisp :tangle yes
(after! company
  (setq company-idle-delay 0.5
        company-minimum-prefix-length 2)
  (setq company-show-numbers t)
(add-hook 'evil-normal-state-entry-hook #'company-abort)) ;; make aborting less annoying.
#+END_SRC
Now, the improvements from ~precident~ are mostly from remembering history, so
let's improve that memory.
#+BEGIN_SRC emacs-lisp
(setq-default history-length 1000)
(setq-default prescient-history-length 1000)
#+END_SRC
*** Plain Text
~ispell~ is nice, let's have it in ~text~, ~markdown~, and ~GFM~.
#+BEGIN_SRC emacs-lisp
(set-company-backend! '(text-mode
                        markdown-mode
                        gfm-mode)
  '(:seperate company-ispell
              company-files
              company-yasnippet))
#+END_SRC
